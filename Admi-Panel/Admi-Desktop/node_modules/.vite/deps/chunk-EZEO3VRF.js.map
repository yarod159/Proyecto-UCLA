{
  "version": 3,
  "sources": ["../../@mui/material/Typography/typographyClasses.js", "../../@mui/material/Typography/Typography.js", "../../@mui/material/Typography/index.js"],
  "sourcesContent": ["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getTypographyUtilityClass(slot) {\r\n  return generateUtilityClass('MuiTypography', slot);\r\n}\r\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\r\nexport default typographyClasses;", "'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport { getTypographyUtilityClass } from './typographyClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    align,\r\n    gutterBottom,\r\n    noWrap,\r\n    paragraph,\r\n    variant,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\r\n  };\r\n  return composeClasses(slots, getTypographyUtilityClass, classes);\r\n};\r\nexport const TypographyRoot = styled('span', {\r\n  name: 'MuiTypography',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\r\n  }\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => _extends({\r\n  margin: 0\r\n}, ownerState.variant === 'inherit' && {\r\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\r\n  font: 'inherit'\r\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\r\n  textAlign: ownerState.align\r\n}, ownerState.noWrap && {\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap'\r\n}, ownerState.gutterBottom && {\r\n  marginBottom: '0.35em'\r\n}, ownerState.paragraph && {\r\n  marginBottom: 16\r\n}));\r\nconst defaultVariantMapping = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  subtitle1: 'h6',\r\n  subtitle2: 'h6',\r\n  body1: 'p',\r\n  body2: 'p',\r\n  inherit: 'p'\r\n};\r\n\r\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\r\nconst colorTransformations = {\r\n  primary: 'primary.main',\r\n  textPrimary: 'text.primary',\r\n  secondary: 'secondary.main',\r\n  textSecondary: 'text.secondary',\r\n  error: 'error.main'\r\n};\r\nconst transformDeprecatedColors = color => {\r\n  return colorTransformations[color] || color;\r\n};\r\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\r\n  const themeProps = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTypography'\r\n  });\r\n  const color = transformDeprecatedColors(themeProps.color);\r\n  const props = extendSxProp(_extends({}, themeProps, {\r\n    color\r\n  }));\r\n  const {\r\n      align = 'inherit',\r\n      className,\r\n      component,\r\n      gutterBottom = false,\r\n      noWrap = false,\r\n      paragraph = false,\r\n      variant = 'body1',\r\n      variantMapping = defaultVariantMapping\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const ownerState = _extends({}, props, {\r\n    align,\r\n    color,\r\n    className,\r\n    component,\r\n    gutterBottom,\r\n    noWrap,\r\n    paragraph,\r\n    variant,\r\n    variantMapping\r\n  });\r\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\r\n    as: Component,\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    className: clsx(classes.root, className)\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * Set the text-align on the component.\r\n   * @default 'inherit'\r\n   */\r\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * If `true`, the text will have a bottom margin.\r\n   * @default false\r\n   */\r\n  gutterBottom: PropTypes.bool,\r\n  /**\r\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\r\n   *\r\n   * Note that text overflow can only happen with block or inline-block level elements\r\n   * (the element needs to have a width in order to overflow).\r\n   * @default false\r\n   */\r\n  noWrap: PropTypes.bool,\r\n  /**\r\n   * If `true`, the element will be a paragraph element.\r\n   * @default false\r\n   */\r\n  paragraph: PropTypes.bool,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * Applies the theme typography styles.\r\n   * @default 'body1'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\r\n  /**\r\n   * The component maps the variant prop to a range of different HTML element types.\r\n   * For instance, subtitle1 to `<h6>`.\r\n   * If you wish to change that mapping, you can provide your own.\r\n   * Alternatively, you can use the `component` prop.\r\n   * @default {\r\n   *   h1: 'h1',\r\n   *   h2: 'h2',\r\n   *   h3: 'h3',\r\n   *   h4: 'h4',\r\n   *   h5: 'h5',\r\n   *   h6: 'h6',\r\n   *   subtitle1: 'h6',\r\n   *   subtitle2: 'h6',\r\n   *   body1: 'p',\r\n   *   body2: 'p',\r\n   *   inherit: 'p',\r\n   * }\r\n   */\r\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\r\n} : void 0;\r\nexport default Typography;", "'use client';\r\n\r\nexport { default } from './Typography';\r\nexport { default as typographyClasses } from './typographyClasses';\r\nexport * from './typographyClasses';"],
  "mappings": "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",
  "names": ["Typography", "_jsx", "PropTypes", "init_Typography"]
}
